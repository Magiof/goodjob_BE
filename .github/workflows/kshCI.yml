
name: Good_job CI

on:
  push:
    branches: [ "ksh" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
        - name: create env file
          working-directory: ../goodjob_BE
          run: |
            touch .env
            cat << EOF >> .env
            ${{ secrets.GOODJOB_SECRET }}
        - name: npm install
          working-directory: ../goodjob_BE
          run: |
            npm install 
        - name: npm test
          working-directory: ../goodjob_BE
          run: |
            npm test
        - name: if fail
          uses: actions/github-script@0.2.0
          with:
            github-token: ${{github.token}}
            script: |
              const ref = "${{github.ref}}"
              const pull_number = Number(ref.split("/")[2])
              await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"테스트코드를 다시 확인해주세요. ",
              event: "REQUEST_CHANGES"
              })
              await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
              })
          if: failure()
        - name: Merge ksh -> main
          uses: devmasx/merge-branch@master
          with:
            type: now
            from_branch: ksh
            target_branch: main
            github_token: ${{ github.token }}
         
        # - name: if merge fail
        #   uses: actions/github-script@0.2.0
        #   with:
        #     github-token: ${{ secrets.GIT_A_TOKEN }}
        #     script: |
        #       const ref = "${{github.ref}}"
        #       const pull_number = Number(ref.split("/")[2])
        #       await github.pulls.createReview({
        #       ...context.repo,
        #       pull_number,
        #       body:"컨플릭트를 해결해 주세요. ",
        #       event: "REQUEST_CHANGES"
        #       })
        #       await github.pulls.update({
        #       ...context.repo,
        #       pull_number,
        #       state: "closed"
        #       })
        #   if: failure()
        # - name: pr main <- test
>>>>>>>> main:.github/workflows/kshCI.yml
